# Server Configuration
PORT=3001
NODE_ENV=development

# ⚠️ CRITICAL SECURITY WARNING ⚠️
# NEVER commit real credentials to version control!
# 1. Copy this file to .env
# 2. Replace all placeholder values with real credentials
# 3. Ensure .env is in .gitignore (it should be already)

# AWS S3 Configuration for Image Storage
# Generate new IAM credentials with S3 access only
AWS_ACCESS_KEY_ID=AKIA_REPLACE_WITH_REAL_KEY
AWS_SECRET_ACCESS_KEY=REPLACE_WITH_REAL_SECRET_KEY
AWS_REGION=us-east-1
AWS_S3_BUCKET=your-bucket-name
S3_BUCKET_NAME=your-bucket-name

# Google Vertex AI Configuration
# Get from: https://console.cloud.google.com/
GOOGLE_CLOUD_PROJECT_ID=your-gcp-project-id
GOOGLE_APPLICATION_CREDENTIALS=./vertex-ai-key.json
VERTEX_AI_LOCATION=us-central1

# Printer Authentication Tokens (comma-separated)
PRINTER_AUTH_TOKENS=printer123,printer456,printer789

# Frontend URL (for CORS)
FRONTEND_URL=http://localhost:3000

# Cleanup Token (generate a secure random string)
CLEANUP_AUTH_TOKEN=generate-secure-random-token-here

# Admin API Token (generate a secure random string - use for admin dashboard)
# Example: openssl rand -hex 32
ADMIN_AUTH_TOKEN=generate-secure-admin-token-here

# Chitu 3D Printer API Configuration
# Contact Chitu for production credentials after machine installation
CHITU_APP_ID=your_chitu_app_id_from_registration
CHITU_APP_SECRET=your_chitu_app_secret_from_registration
CHITU_API_URL=https://www.gzchitu.cn
CHITU_TEST_MODE=false

# Default Product Settings for Chitu
CHITU_DEFAULT_PRODUCT_ID=dZesWMYqBIuCwV1qr6Ugxw==
CHITU_DEFAULT_PAY_TYPE=nayax

# MQTT Configuration for Real-time Updates
# Will be provided by Chitu with your account
CHITU_MQTT_BROKER=open-mqtt.gzchitu.cn
CHITU_MQTT_PORT=1883
CHITU_MQTT_USERNAME=your_chitu_app_id
CHITU_MQTT_PASSWORD=contact_chitu_for_mqtt_password

# Available Machines (comma-separated machine IDs from Chitu)
# Update with actual device IDs when machines are registered
# Using exhibition hall machine for testing
AVAILABLE_MACHINES=CT0700026